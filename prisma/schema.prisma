// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  username      String
  email     String   @unique
  password  String
  role      UserRole @default(TRAVELER) // TRAVELER, OPERATOR, ADMIN
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tours     Tour[]    @relation("TourOwner")
  bookings  Booking[]
  payments  Payment[]
  reviews   Review[]

  Notification Notification[]
  refreshToken String?
}

enum UserRole {
  TRAVELER
  OPERATOR

}

model Tour {
  id          String   @id @default(uuid())
  title       String
  description String
  location    String
  price       Float
  images      String[] // Store image URLs
  userId     String
  User       User     @relation("TourOwner", fields: [userId], references: [id])
  createdAt   DateTime @default(now())

  bookings    Booking[]
  reviews     Review[]
}

model Booking {
  id         String   @id @default(uuid())
  userId     String
  tourId     String
  status     BookingStatus @default(PENDING)
  createdAt  DateTime @default(now())

  user       User  @relation(fields: [userId], references: [id])
  tour       Tour  @relation(fields: [tourId], references: [id])
  payment    Payment?
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
}

model Payment {
  id         String   @id @default(uuid())
  userId     String
  bookingId  String @unique
  amount     Float
  status     PaymentStatus @default(PENDING)
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  booking    Booking  @relation(fields: [bookingId], references: [id])
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

model Review {
  id        String   @id @default(uuid())
  userId    String
  tourId    String
  rating    Int     @default(5) // 1 to 5 stars
  comment   String?
  createdAt DateTime @default(now())

  user      User  @relation(fields: [userId], references: [id])
  tour      Tour  @relation(fields: [tourId], references: [id])
}

model Notification {
  id        String   @id @default(uuid())
  userId    String
  message   String
  type      NotificationType
  read      Boolean @default(false)
  createdAt DateTime @default(now())
status NotificationStatus @default(UNREAD)
  user      User  @relation(fields: [userId], references: [id])
}
enum NotificationStatus {
  UNREAD
  READ
}
enum NotificationType {
  BOOKING_CONFIRMATION
  PAYMENT_SUCCESS
  PAYMENT_FAILED
  GENERAL
}